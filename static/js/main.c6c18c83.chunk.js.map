{"version":3,"sources":["componentes/Header.js","componentes/Formulario.js","componentes/Evento.js","componentes/Eventos.js","componentes/App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","uk-margin","Component","Formulario","nombreEventoRef","React","createRef","categoriaRef","mostrarOpciones","key","categoria","_this","props","categorias","id","name_localized","value","buscarEvento","e","preventDefault","datosBusqueda","nombre","current","obtenerEventos","Object","keys","this","onSubmit","type","ref","placeholder","map","Evento","_props$info","info","name","url","desc","description","text","length","substr","logo","src","alt","href","target","Eventos","uk-grid","eventos","componentes_Evento","App","token","ordenar","state","obtenerCategorias","_callee","regenerator_default","wrap","_context","prev","next","concat","fetch","then","respuesta","json","setState","categories","stop","_callee2","busqueda","_context2","events","componentes_Header","componentes_Formulario","componentes_Eventos","Boolean","window","location","hostname","match","ReactDOM","render","componentes_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c6c18c83.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n    render() {\n        return (\n            <header className=\"uk-margin\" uk-margin=\"true\">\n                <h1 className=\"uk-text-center\">Eventos</h1>\n            </header>\n        );\n    }\n}\n\nexport default Header;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Formulario extends Component {\n    \n    nombreEventoRef = React.createRef();\n    categoriaRef = React.createRef();\n    \n    mostrarOpciones = (key) => {        \n        const categoria = this.props.categorias[key];\n\n        const {id, name_localized} = categoria;\n\n        if(!id || !name_localized) return null;\n\n        return(\n            <option value={id} key={id}>{name_localized}</option>\n        )\n    }\n\n    buscarEvento = (e) => {\n        e.preventDefault();\n\n        //Crear objeto\n        const datosBusqueda = {\n            nombre: this.nombreEventoRef.current.value,\n            categoria: this.categoriaRef.current.value\n        }\n\n        //pasar por props\n        this.props.obtenerEventos(datosBusqueda);\n\n        //resetear forms\n        \n    }\n\n    render() {\n        const categorias = Object.keys(this.props.categorias);\n\n        return (\n            <form onSubmit={this.buscarEvento}>\n                <fieldset className=\"uk-fieldset uk-margin\">\n                    <legend className=\"uk-legend uk-text-center\">\n                        Busca tu evento por nombre o categoría\n                    </legend>\n\n                    <div className=\"uk-column-1-3@m uk-margin\">\n                        <div className=\"uk-margin\" uk-margin=\"true\">\n                            <input className=\"uk-input\" type=\"text\" ref={this.nombreEventoRef} placeholder=\"Nombre de Evento o Ciudad\"/>\n                        </div>\n                        <div className=\"uk-margin\" uk-margin=\"true\">\n                            <select className=\"uk-select\" ref={this.categoriaRef}>\n                                {categorias.map(this.mostrarOpciones)}\n                            </select>\n                        </div>\n                        <div className=\"uk-margin\" uk-margin=\"true\">\n                            <button className=\"uk-button uk-button-danger\">Buscar</button>\n                        </div>\n                    </div>\n                </fieldset>\n            </form>\n        );\n    }\n}\n\nFormulario.propTypes = {\n    categorias: PropTypes.array.isRequired,\n    obtenerEventos: PropTypes.func.isRequired\n}\nexport default Formulario;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Evento = (props) => {\n    \n    const {name, url} = props.info;\n\n    if(!name) return null;\n\n    let desc = props.info.description.text;\n\n    if(desc.length > 250) {\n        desc = desc.substr(0,250);\n    }\n    \n    return(\n        <div className=\"uk-card uk-card-default\">\n            <div className=\"uk-card-media-top\">\n                {props.info.logo !== null ? <img src={props.info.logo.url} alt={props.info.name.text} /> : ''}        \n            </div>\n            <div className=\"uk-card-body\">\n                <h3 className=\"uk-card-title\">\n                    {props.info.name.text}\n                </h3>\n                <p>{desc}</p>\n                <div className=\"uk-card-footer\">\n                    <a className=\"uk-button uk-button-secondary\" href={url} target=\"_blank\">\n                        Más Información\n                    </a>\n                </div>\n            </div>\n\n        </div>\n    )\n}\n\nEvento.propTypes = {\n    info: PropTypes.object.isRequired\n}\nexport default Evento;","import React, { Component } from 'react';\nimport Evento from './Evento';\nimport PropTypes from 'prop-types';\n\nclass Eventos extends Component {\n    render() {\n        return (\n            <div className=\"uk-child-width-1-3@m\" uk-grid=\"true\">\n                {Object.keys(this.props.eventos).map(key => (\n                    <Evento \n                        key={key}\n                        info={this.props.eventos[key]}\n                    />\n                ))}\n            </div>\n        );\n    }\n}\n\nEventos.propTypes = {\n    eventos: PropTypes.array.isRequired\n}\n\nexport default Eventos;","import React, { Component } from 'react';\nimport Header from './Header';\nimport Formulario from './Formulario';\nimport Eventos from './Eventos';\nclass App extends Component {\n\n  token = 'ZOEJMHXSSWXWIPK4ML5T';\n  ordenar = 'date';\n  componentDidMount() {\n    this.obtenerCategorias();\n  }\n\n  state = {\n    categorias: [],\n    eventos:  []\n  }\n\n  obtenerCategorias = async () => {\n    let url = `https://www.eventbriteapi.com/v3/categories/?token=${this.token}&locale=es_ES`;\n\n    await fetch(url)\n      .then(respuesta => {\n        return respuesta.json();\n      })\n      .then(categorias => {\n        this.setState({\n          categorias: categorias.categories\n        })\n      })\n  }\n\n  obtenerEventos = async (busqueda) => {\n    let url = `https://www.eventbriteapi.com/v3/events/search/?q=${busqueda.nombre}&categories=${busqueda.categoria}&sort_by=${this.ordenar}&token=${this.token}&locale=es_ES`;\n\n    await fetch(url)\n    .then(respuesta => {\n      return respuesta.json();\n    })\n    .then(eventos => {\n      this.setState({\n        eventos: eventos.events\n      })\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <Header />\n          <div className=\"uk-container\">\n            <Formulario \n              categorias={this.state.categorias}\n              obtenerEventos={this.obtenerEventos}\n            />\n            <Eventos \n              eventos={this.state.eventos}\n            />\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './componentes/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}